import pandas as pd
import numpy as np
import streamlit as st

st.set_page_config(page_title="C치lculo Previdenci치rio INSS V5", layout="wide")

st.title("游늵 INSS C치lculo Previdenci치rio - Revis칚o da Vida Toda (v5)")

# ===============================
# ETAPA 1: IMPORTA칂츾O DOS DADOS
# ===============================
st.sidebar.header("游닌 Etapa 1: Importa칞칚o dos Dados")
cnis_file = st.sidebar.file_uploader("Importar CSV do CNIS", type="csv")
carta_file = st.sidebar.file_uploader("Importar CSV da Carta de Benef칤cio", type="csv")

if cnis_file and carta_file:
    cnis = pd.read_csv(cnis_file)
    carta = pd.read_csv(carta_file)

    st.subheader("游늯 Dados CNIS")
    st.dataframe(cnis)
    st.subheader("游늯 Dados Carta de Benef칤cio")
    st.dataframe(carta)

    # ===============================
    # ETAPA 2: SANITIZA칂츾O & NORMALIZA칂츾O
    # ===============================
    st.sidebar.header("游빛 Etapa 2: Sanitiza칞칚o")

    def sanitize_dataframe(df, salary_col):
        df = df.dropna(subset=[salary_col])
        df = df[df[salary_col].apply(lambda x: str(x).replace('.', '').replace(',', '').isdigit())]
        df[salary_col] = df[salary_col].astype(float)
        return df

    cnis = sanitize_dataframe(cnis, cnis.columns[1])
    carta = sanitize_dataframe(carta, carta.columns[2])

    # ===============================
    # ETAPA 3: CLASSIFICA칂츾O TEMPORAL & MARCOS LEGAIS
    # ===============================
    st.sidebar.header("游늱 Etapa 3: Classifica칞칚o Temporal")

    def extract_year(data):
        try:
            return int(str(data)[:4])
        except:
            return np.nan

    cnis['Ano'] = cnis[cnis.columns[0]].apply(extract_year)
    carta['Ano'] = carta[carta.columns[1]].apply(extract_year)

    # ===============================
    # ETAPA 4: CORRE칂츾O MONET츼RIA AVAN칂ADA
    # ===============================
    st.sidebar.header("游눯 Etapa 4: Corre칞칚o Monet치ria")

    def aplicar_corrigido(df, salario_col, indice_col):
        df['Sal치rio Corrigido'] = df[salario_col] * df[indice_col]
        return df

    carta = aplicar_corrigido(carta, carta.columns[2], carta.columns[3])

    # ===============================
    # ETAPA 5: SELE칂츾O DOS 80% MELHORES SAL츼RIOS
    # ===============================
    st.sidebar.header("游늵 Etapa 5: Sele칞칚o dos 80% Maiores")

    def top_80(df, col_corrigido):
        df = df.sort_values(by=col_corrigido, ascending=False)
        n = int(0.8 * len(df))
        return df.head(n)

    top_cnis = top_80(cnis, cnis.columns[1])
    top_carta = top_80(carta, 'Sal치rio Corrigido')

    st.subheader("游늷 80% Maiores Sal치rios CNIS")
    st.dataframe(top_cnis)

    st.subheader("游늷 80% Maiores Sal치rios Carta")
    st.dataframe(top_carta)

    # ===============================
    # ETAPA 6: C츼LCULO DO INSS - M칄TODOS MATEM츼TICOS
    # ===============================

    st.sidebar.header("游빑 Etapa 6: Aplica칞칚o do C치lculo")

    media_cnis = round(top_cnis[cnis.columns[1]].mean(), 2)
    media_carta = round(top_carta['Sal치rio Corrigido'].mean(), 2)

    # Par칙metros Previdenci치rios
    Tc = 38 + (1/12) + (25/365)  # Tempo contribui칞칚o
    a = 0.31  # Al칤quota
    Es = 21.8  # Expectativa sobrevida
    Id = 60  # Idade
    coef = 1.0

    def fator_previdenciario(Tc, a, Es, Id):
        return round((Tc * a / Es) * (1 + ((Id + Tc * a) / 100)), 4)

    FP = fator_previdenciario(Tc, a, Es, Id)

    def salario_beneficio(media, FP):
        return round(media * FP, 2)

    sal_benef_cnis = salario_beneficio(media_cnis, FP)
    sal_benef_carta = salario_beneficio(media_carta, FP)

    # ===============================
    # ETAPA 7: RESULTADO DETALHADO
    # ===============================
    st.header("游늼 Resultado do C치lculo")
    st.write(f"**M칠dia CNIS:** R$ {media_cnis:,.2f}")
    st.write(f"**M칠dia Carta:** R$ {media_carta:,.2f}")
    st.write(f"**Fator Previdenci치rio:** {FP}")
    st.write(f"**Sal치rio Benef칤cio CNIS:** R$ {sal_benef_cnis:,.2f}")
    st.write(f"**Sal치rio Benef칤cio Carta:** R$ {sal_benef_carta:,.2f}")

    # ===============================
    # ETAPA 8: IDENTIFICA칂츾O DE SAL츼RIOS CR칈TICOS
    # ===============================

    st.subheader("游뛀 Sal치rios Desconsiderados na Carta")
    criticos = carta[carta.apply(lambda x: x.astype(str).str.contains("DESCONSIDERADO", na=False)).any(axis=1)]
    st.dataframe(criticos)

    # ===============================
    # ETAPA 9: EXPORTA칂츾O
    # ===============================
    resultado = pd.DataFrame({
        'Fonte': ['CNIS', 'Carta'],
        'M칠dia 80% Sal치rios': [media_cnis, media_carta],
        'Fator Previdenci치rio': [FP, FP],
        'Sal치rio Benef칤cio': [sal_benef_cnis, sal_benef_carta]
    })

    st.download_button("游닌 Exportar Resultado (CSV)", data=resultado.to_csv(index=False), file_name='resultado_previdenciario.csv')

    # ===============================
    # ETAPA 10: GR츼FICO VISUAL
    # ===============================

    st.subheader("游늳 Comparativo Visual CNIS x Carta")
    st.bar_chart(data=resultado.set_index('Fonte')['Sal치rio Benef칤cio'])

    # ===============================
    # ETAPA 11: EXPLICA칂츾O
    # ===============================
    st.header("游닄 Fundamenta칞칚o Jur칤dico-Matem치tica")
    st.markdown("""
    - **Lei n췈 8.213/91, Art. 29, 춶2췈:** Crit칠rio dos 80% maiores sal치rios.
    - **Lei n췈 9.876/99:** Introdu칞칚o do Fator Previdenci치rio.
    - **Expectativa IBGE + Idade + Al칤quota:** Aplicados corretamente.

    Todos os c치lculos seguem rigorosamente os normativos previdenci치rios.

    Recomenda-se revisar os sal치rios desconsiderados para poss칤vel revis칚o mais vantajosa.
    """)
